package wtf.monsoon.client.modules.exploit

import me.bush.eventbuskotlin.EventListener
import me.bush.eventbuskotlin.listener
import net.minecraft.network.Packet
import net.minecraft.network.play.client.C00PacketKeepAlive
import net.minecraft.network.play.client.C03PacketPlayer
import net.minecraft.network.play.client.C0FPacketConfirmTransaction
import wtf.monsoon.backend.Category
import wtf.monsoon.backend.module.Module
import wtf.monsoon.backend.setting.Setting
import wtf.monsoon.client.event.EventPacket
import wtf.monsoon.client.event.EventPreMotion
import wtf.monsoon.client.util.network.PacketSleepThread
import wtf.monsoon.client.util.network.PacketUtil
import wtf.monsoon.client.util.network.TimestampedPacket
import java.util.concurrent.LinkedBlockingQueue

class PingSpoof : Module("Ping Spoof", "Spoof your ping to the server.", Category.EXPLOIT) {
    private val pingValue = Setting<Long>("Ping", "What your ping should be spoofed as.", 200L, 10L, 2500L, 10L)

    private var packets: MutableList<TimestampedPacket> = mutableListOf()

    override var metadata: () -> String = { "P: ${this.pingValue.getValue()} H: ${this.packets.size}" }

    override fun disable() {
        super.disable()
        this.packets.forEach { it.release(this.packets) }
    }

    @EventListener
    val preMotion = fun(e: EventPreMotion) {
        this.packets.forEach { it.releaseIfReady(this.packets) }
    }

    @EventListener
    val eventPacket = fun(e: EventPacket) {
        if (e.packet is C0FPacketConfirmTransaction || e.packet is C00PacketKeepAlive) {
            e.cancel()
            this.packets.add(TimestampedPacket(e.packet, System.currentTimeMillis() + this.pingValue.getValue()))
        }
    }

}