package wtf.monsoon.client.modules.exploit.disabler

import me.bush.eventbuskotlin.EventListener
import me.bush.eventbuskotlin.listener
import net.minecraft.network.Packet
import net.minecraft.network.play.client.C0FPacketConfirmTransaction
import net.minecraft.network.play.client.C13PacketPlayerAbilities
import wtf.monsoon.backend.module.MulticlassModule
import wtf.monsoon.backend.module.mode.ModuleMode
import wtf.monsoon.backend.setting.Setting
import wtf.monsoon.client.event.EventPacket
import wtf.monsoon.client.event.EventPreMotion
import wtf.monsoon.client.modules.exploit.Disabler
import wtf.monsoon.client.util.math.randomNumber
import wtf.monsoon.client.util.misc.Stopwatch
import wtf.monsoon.client.util.network.PacketUtil
import java.util.concurrent.LinkedBlockingQueue

class AbilitiesDisabler(name: String, parent: MulticlassModule) : ModuleMode<Disabler>(name, parent) {

    private var isFlying = Setting<Boolean>("Is Flying", true)
    private var allowFlying = Setting<Boolean>("Flying", true)
    private var invulnerable = Setting<Boolean>("Invulnerable", true)
    private var creativeMode = Setting<Boolean>("Creative Mode", true)

    init {
        this.registerSettings(isFlying, allowFlying, invulnerable, creativeMode)
    }

    @EventListener
    val preMotion = fun(e: EventPreMotion) {
        val packet = C13PacketPlayerAbilities()
        packet.isFlying = this.isFlying.getValue()
        packet.allowFlying = this.allowFlying.getValue()
        packet.invulnerable = this.invulnerable.getValue()
        packet.creativeMode = this.creativeMode.getValue()
        PacketUtil.sendPacketNoEvent(packet)
    }
}