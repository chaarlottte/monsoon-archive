package wtf.monsoon.client.modules.exploit.disabler

import me.bush.eventbuskotlin.EventListener
import me.bush.eventbuskotlin.listener
import net.minecraft.network.play.client.C00PacketKeepAlive
import net.minecraft.network.play.client.C0FPacketConfirmTransaction
import wtf.monsoon.backend.module.MulticlassModule
import wtf.monsoon.backend.module.mode.ModuleMode
import wtf.monsoon.backend.setting.Setting
import wtf.monsoon.client.event.EventPacket
import wtf.monsoon.client.modules.exploit.Disabler
import wtf.monsoon.client.util.network.PacketSleepThread

class PingDisabler(name: String, parent: MulticlassModule) : ModuleMode<Disabler>(name, parent) {

    private var transactionMode = Setting<PacketMode>("Transaction Mode", PacketMode.CANCEL)
    private var keepAliveMode = Setting<PacketMode>("Keep Alive Mode", PacketMode.CANCEL)
    private var delaySetting = Setting<Long>("Delay", "How long to delay packets for.", 200L, 10L, 2000L, 1L)

    @EventListener
    val packetEvent = fun(e: EventPacket) {
        if(e.packet is C0FPacketConfirmTransaction)
            this.handlePacket(e, this.transactionMode, this.delaySetting.getValue())
        else if(e.packet is C00PacketKeepAlive)
            this.handlePacket(e, this.keepAliveMode, this.delaySetting.getValue())
    }

    private fun handlePacket(e: EventPacket, mode: Setting<PacketMode>, delay: Long = this.delaySetting.getValue()) {
        when(mode.getValue()) {
            PacketMode.CANCEL -> e.cancel()
            PacketMode.DELAY -> PacketSleepThread(e.packet, delay).start()
        }
    }

    enum class PacketMode {
        CANCEL, DELAY
    }
}